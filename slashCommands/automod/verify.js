const { ApplicationCommandType, PermissionsBitField, ApplicationCommandOptionType, ButtonStyle, ButtonBuilder, ActionRowBuilder, EmbedBuilder, StringSelectMenuBuilder } = require('discord.js');
const { QuickDB } = require("quick.db");
const db = new QuickDB({ filePath: "./database/verify.sqlite" });

module.exports = {
    name: 'setup-verification',
    description: '‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å',
    type: ApplicationCommandType.ChatInput,
  userPerms: [PermissionsBitField.Flags.ManageGuild],
    options: [
        {
            name: 'role',
            description: '‡∏¢‡∏®‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å',
            type: ApplicationCommandOptionType.Role,
            required: true
        },
        {
            name: 'channel',
            description: '‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á',
            type: ApplicationCommandOptionType.Channel,
            required: true,
            channelTypes: ['GUILD_TEXT'], 
            autocomplete: true
        }
    ],
    run: async (client, interaction) => {
        const role = interaction.options.get('role').role;
        const channel = interaction.options.getChannel('channel', false);

        await db.set(`verification.${interaction.guild.id}`, { Role: role.id, Channel: channel?.id, Verified: [] });

        const selectMenu = new StringSelectMenuBuilder()
        .setCustomId('verification_level')
        .setPlaceholder('‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö')
        .addOptions(
            {
                label: '‡∏ï‡πà‡∏≥',
                value: 'low',
                emoji:'üî¥',
                description: '‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏£‡∏±‡∏ö‡∏¢‡∏®‡πÄ‡∏•‡∏¢'
            },
            {
                label: '‡∏Å‡∏•‡∏≤‡∏á',
                value: 'medium',
                emoji:'üü°',
                description: '‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏´‡πá‡∏ô'
            },
            {
                label: '‡∏™‡∏π‡∏á',
                value: 'high',
                emoji:'üü¢',
                description: '‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏´‡πá‡∏ô'
            }
        );
    
    
        const verify = new EmbedBuilder()
            .setColor('#20be30')
            .setThumbnail(interaction.guild.iconURL())
            .setTimestamp()
            .setTitle('‚Ä¢ ‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô')
            .setAuthor({ name: `ü™™ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö` })
            .setFooter({ text: `‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡πâ‡∏ô : ‡∏ó‡∏î‡∏•‡∏≠‡∏á 0.5`, iconURL: interaction.guild.iconURL() })


            const msg = await interaction.reply({ content: `‡πÄ‡∏£‡∏≤‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏•‡πâ‡∏ß **‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏ó‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏ö‡∏≠‡∏ó‡πÄ‡∏£‡∏≤**`, embeds: [verify], components: [new ActionRowBuilder().addComponents(selectMenu)], ephemeral: true });

        const filter = (i) => i.customId === 'verification_level';
        const collector = msg?.createMessageComponentCollector({ filter, time: 60000 });

        collector?.on('collect', async (i) => {
            if (i.customId === 'verification_level') {
                const level = i.values[0];
                if (level === 'low') {
                    const verify = new EmbedBuilder()
                    .setColor('#20be30')
                        .setThumbnail(interaction.guild.iconURL())
                        .setTimestamp()
                        .setTitle('‚Ä¢ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ‡∏£‡∏∞‡∏î‡∏±‡∏ö : **‡∏ï‡πà‡∏≥**')
                        .setDescription('‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° \`‡∏£‡∏±‡∏ö‡∏¢‡∏®\` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏¢‡∏®‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞')
                        .setAuthor({ name: `ü™™ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å` })
                        .setFooter({ text: `‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡πâ‡∏ô : ‡∏ó‡∏î‡∏•‡∏≠‡∏á 0.5` });

                    const buttons = new ActionRowBuilder()
                        .addComponents(
                            new ButtonBuilder()
                                .setCustomId(`verify${level}`)
                                .setLabel('‡∏£‡∏±‡∏ö‡∏¢‡∏®')
                                .setStyle(ButtonStyle.Success)
                        );

                    await channel?.send({ embeds: [verify], components: [buttons] });
                    await i.update({ content: `**‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ‡∏£‡∏∞‡∏î‡∏±‡∏ö : ${level}** ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!`, components: [], ephemeral: true  });
                } else if (level === 'medium') {
                    const verify = new EmbedBuilder()
                    .setColor('#20be30')
                        .setThumbnail(interaction.guild.iconURL())
                        .setTimestamp()
                        .setTitle('‚Ä¢ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ‡∏£‡∏∞‡∏î‡∏±‡∏ö : **‡∏Å‡∏•‡∏≤‡∏á**')
                        .setDescription('‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° \`‡∏£‡∏±‡∏ö‡∏¢‡∏®\` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏¢‡∏®‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞')
                        .setAuthor({ name: `ü™™ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å` })
                        .setFooter({ text: `‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡πâ‡∏ô : ‡∏ó‡∏î‡∏•‡∏≠‡∏á 0.5` });

                    const buttons = new ActionRowBuilder()
                        .addComponents(
                            new ButtonBuilder()
                                .setCustomId(`verify${level}`)
                                .setLabel('‡∏£‡∏±‡∏ö‡∏¢‡∏®')
                                .setStyle(ButtonStyle.Success)
                        );

                    await channel?.send({ embeds: [verify], components: [buttons] });
                    await i.update({ content: `**‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ‡∏£‡∏∞‡∏î‡∏±‡∏ö : ${level}** ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!`, components: [], ephemeral: true  });
                } else if (level === 'high') {
                    const verify = new EmbedBuilder()
                    .setColor('#20be30')
                        .setThumbnail(interaction.guild.iconURL())
                        .setTimestamp()
                        .setTitle('‚Ä¢ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ‡∏£‡∏∞‡∏î‡∏±‡∏ö : **‡∏™‡∏π‡∏á**')
                        .setDescription('‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° \`‡∏£‡∏±‡∏ö‡∏¢‡∏®\` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏¢‡∏®‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞')
                        .setAuthor({ name: `ü™™ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å` })
                        .setFooter({ text: `‚úÖ Verification Prompt` });

                    const buttons = new ActionRowBuilder()
                        .addComponents(
                            new ButtonBuilder()
                                .setCustomId(`verify${level}`)
                                .setLabel('‡∏£‡∏±‡∏ö‡∏¢‡∏®')
                                .setStyle(ButtonStyle.Success)
                        );

                    await channel?.send({ embeds: [verify], components: [buttons] });
                    await i.update({ content: `**‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ‡∏£‡∏∞‡∏î‡∏±‡∏ö : ${level}** ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!`, components: [], ephemeral: true  });
                }
            }
        });
    }
};

